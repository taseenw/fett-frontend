{"ast":null,"code":"import config from '../../auth_config.json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  http;\n  constructor(http) {\n    this.http = http;\n  }\n  ping$() {\n    return this.http.get(`${config.apiUri}/api/external`);\n  }\n  static ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["config","ApiService","http","constructor","ping$","get","apiUri","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/egershte/Documents/Personal/fett-frontend/src/app/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport config from '../../auth_config.json';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  constructor(private http: HttpClient) {}\n\n  ping$() {\n    return this.http.get(`${config.apiUri}/api/external`);\n  }\n}\n"],"mappings":"AAEA,OAAOA,MAAM,MAAM,wBAAwB;;;AAK3C,OAAM,MAAOC,UAAU;EACDC,IAAA;EAApBC,YAAoBD,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCE,KAAKA,CAAA;IACH,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAGL,MAAM,CAACM,MAAM,eAAe,CAAC;EACvD;;qBALWL,UAAU,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;;WAAVT,UAAU;IAAAU,OAAA,EAAVV,UAAU,CAAAW,IAAA;IAAAC,UAAA,EAFT;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}