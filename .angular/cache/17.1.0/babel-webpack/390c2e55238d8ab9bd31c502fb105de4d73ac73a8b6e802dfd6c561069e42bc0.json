{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, EventEmitter, SecurityContext, Directive, Input, Output, NgModule } from '@angular/core';\nimport { isPlatformBrowser, DOCUMENT } from '@angular/common';\nimport { BehaviorSubject, EMPTY, throwError, zip, from, animationFrameScheduler } from 'rxjs';\nimport { filter, map, take, switchMap, tap, catchError } from 'rxjs/operators';\nimport * as i2 from '@angular/platform-browser';\nconst HIGHLIGHT_OPTIONS = new InjectionToken('HIGHLIGHT_OPTIONS');\n\n/**\r\n * Enable usage of the library together with \"trusted-types\" HTTP Content-Security-Policy (CSP)\r\n *\r\n * Can be added to angular.json -> serve -> options -> headers to try it out in DEV mode\r\n * \"Content-Security-Policy\": \"trusted-types ngx-highlightjs; require-trusted-types-for 'script'\"\r\n *\r\n * Read more...\r\n * Angular Security: https://angular.io/guide/security#enforcing-trusted-types\r\n * Trusted Types: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/trusted-types\r\n */\nlet policy;\nfunction getPolicy() {\n  if (!policy) {\n    try {\n      policy = window?.trustedTypes?.createPolicy('ngx-highlightjs', {\n        createHTML: s => s\n      });\n    } catch {\n      // trustedTypes.createPolicy throws if called with a name that is\n      // already registered, even in report-only mode. Until the API changes,\n      // catch the error not to break the applications functionally. In such\n      // cases, the code will fall back to using strings.\n    }\n  }\n  return policy;\n}\nfunction trustedHTMLFromStringBypass(html) {\n  return getPolicy()?.createHTML(html) || html;\n}\n\n// @dynamic\nclass HighlightLoader {\n  constructor(doc, platformId, _options) {\n    this.doc = doc;\n    this.platformId = platformId;\n    this._options = _options;\n    // Stream that emits when hljs library is loaded and ready to use\n    this._ready = new BehaviorSubject(null);\n    this.ready = this._ready.asObservable().pipe(filter(hljs => !!hljs), map(hljs => hljs), take(1));\n    if (isPlatformBrowser(platformId)) {\n      // Check if hljs is already available\n      if (doc.defaultView.hljs) {\n        this._ready.next(doc.defaultView.hljs);\n      } else {\n        // Load hljs library\n        this._loadLibrary().pipe(switchMap(hljs => {\n          if (this._options && this._options.lineNumbersLoader) {\n            // Make hljs available on window object (required for the line numbers library)\n            doc.defaultView.hljs = hljs;\n            // Load line numbers library\n            return this.loadLineNumbers().pipe(tap(() => this._ready.next(hljs)));\n          } else {\n            this._ready.next(hljs);\n            return EMPTY;\n          }\n        }), catchError(e => {\n          console.error('[HLJS] ', e);\n          return EMPTY;\n        })).subscribe();\n        // Load highlighting theme\n        if (this._options?.themePath) {\n          this.loadTheme(this._options.themePath);\n        }\n      }\n    }\n  }\n  /**\r\n   * Lazy-Load highlight.js library\r\n   */\n  _loadLibrary() {\n    if (this._options) {\n      if (this._options.fullLibraryLoader && this._options.coreLibraryLoader) {\n        return throwError(() => 'The full library and the core library were imported, only one of them should be imported!');\n      }\n      if (this._options.fullLibraryLoader && this._options.languages) {\n        return throwError(() => 'The highlighting languages were imported they are not needed!');\n      }\n      if (this._options.coreLibraryLoader && !this._options.languages) {\n        return throwError(() => 'The highlighting languages were not imported!');\n      }\n      if (!this._options.coreLibraryLoader && this._options.languages) {\n        return throwError(() => 'The core library was not imported!');\n      }\n      if (this._options.fullLibraryLoader) {\n        return this.loadFullLibrary();\n      }\n      if (this._options.coreLibraryLoader && this._options.languages && Object.keys(this._options.languages).length) {\n        return this.loadCoreLibrary().pipe(switchMap(hljs => this._loadLanguages(hljs)));\n      }\n    }\n    return throwError(() => 'Highlight.js library was not imported!');\n  }\n  /**\r\n   * Lazy-load highlight.js languages\r\n   */\n  _loadLanguages(hljs) {\n    const languages = Object.entries(this._options.languages).map(([langName, langLoader]) => importModule(langLoader()).pipe(tap(langFunc => hljs.registerLanguage(langName, langFunc))));\n    return zip(...languages).pipe(map(() => hljs));\n  }\n  /**\r\n   * Import highlight.js core library\r\n   */\n  loadCoreLibrary() {\n    return importModule(this._options.coreLibraryLoader());\n  }\n  /**\r\n   * Import highlight.js library with all languages\r\n   */\n  loadFullLibrary() {\n    return importModule(this._options.fullLibraryLoader());\n  }\n  /**\r\n   * Import line numbers library\r\n   */\n  loadLineNumbers() {\n    return importModule(this._options.lineNumbersLoader());\n  }\n  /**\r\n   * Reload theme styles\r\n   */\n  setTheme(path) {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this._themeLinkElement) {\n        this._themeLinkElement.href = path;\n      } else {\n        this.loadTheme(path);\n      }\n    }\n  }\n  /**\r\n   * Load theme\r\n   */\n  loadTheme(path) {\n    this._themeLinkElement = this.doc.createElement('link');\n    this._themeLinkElement.href = path;\n    this._themeLinkElement.type = 'text/css';\n    this._themeLinkElement.rel = 'stylesheet';\n    this._themeLinkElement.media = 'screen,print';\n    this.doc.head.appendChild(this._themeLinkElement);\n  }\n}\nHighlightLoader.ɵfac = function HighlightLoader_Factory(t) {\n  return new (t || HighlightLoader)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(HIGHLIGHT_OPTIONS, 8));\n};\nHighlightLoader.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: HighlightLoader,\n  factory: HighlightLoader.ɵfac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HighlightLoader, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HIGHLIGHT_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\n/**\r\n * Map loader response to module object\r\n */\nconst importModule = moduleLoader => {\n  return from(moduleLoader).pipe(filter(module => !!module && !!module.default), map(module => module.default));\n};\nclass HighlightJS {\n  constructor(_loader, options) {\n    this._loader = _loader;\n    this._hljs = null;\n    // Load highlight.js library on init\n    _loader.ready.subscribe(hljs => {\n      this._hljs = hljs;\n      if (options && options.config) {\n        // Set global config if present\n        hljs.configure(options.config);\n        if (hljs.listLanguages().length < 1) {\n          console.error('[HighlightJS]: No languages were registered!');\n        }\n      }\n    });\n  }\n  // A reference for hljs library\n  get hljs() {\n    return this._hljs;\n  }\n  /**\r\n   * Core highlighting function. Accepts the code to highlight (string) and a list of options (object)\r\n   * @param code Accepts the code to highlight\r\n   * @param language must be present and specify the language name or alias of the grammar to be used for highlighting\r\n   * @param ignoreIllegals (optional) when set to true it forces highlighting to finish even in case of detecting illegal syntax for the language instead of throwing an exception.\r\n   */\n  highlight(code, {\n    language,\n    ignoreIllegals\n  }) {\n    return this._loader.ready.pipe(map(hljs => hljs.highlight(code, {\n      language,\n      ignoreIllegals\n    })));\n  }\n  /**\r\n   * Highlighting with language detection.\r\n   * @param value Accepts a string with the code to highlight\r\n   * @param languageSubset An optional array of language names and aliases restricting detection to only those languages.\r\n   * The subset can also be set with configure, but the local parameter overrides the option if set.\r\n   */\n  highlightAuto(value, languageSubset) {\n    return this._loader.ready.pipe(map(hljs => hljs.highlightAuto(value, languageSubset)));\n  }\n  /**\r\n   * Applies highlighting to a DOM node containing code.\r\n   * This function is the one to use to apply highlighting dynamically after page load or within initialization code of third-party JavaScript frameworks.\r\n   * The function uses language detection by default but you can specify the language in the class attribute of the DOM node. See the scopes reference for all available language names and scopes.\r\n   * @param element\r\n   */\n  highlightElement(element) {\n    return this._loader.ready.pipe(map(hljs => hljs.highlightElement(element)));\n  }\n  /**\r\n   * Applies highlighting to all elements on a page matching the configured cssSelector. The default cssSelector value is 'pre code',\r\n   * which highlights all code blocks. This can be called before or after the page’s onload event has fired.\r\n   */\n  highlightAll() {\n    return this._loader.ready.pipe(map(hljs => hljs.highlightAll()));\n  }\n  /**\r\n   * @deprecated in version 12\r\n   * Configures global options:\r\n   * @param config HighlightJs configuration argument\r\n   */\n  configure(config) {\n    return this._loader.ready.pipe(map(hljs => hljs.configure(config)));\n  }\n  /**\r\n   * Adds new language to the library under the specified name. Used mostly internally.\r\n   * @param languageName A string with the name of the language being registered\r\n   * @param languageDefinition A function that returns an object which represents the language definition.\r\n   * The function is passed the hljs object to be able to use common regular expressions defined within it.\r\n   */\n  registerLanguage(languageName, languageDefinition) {\n    return this._loader.ready.pipe(tap(hljs => hljs.registerLanguage(languageName, languageDefinition)));\n  }\n  /**\r\n   * Removes a language and its aliases from the library. Used mostly internall\r\n   * @param languageName: a string with the name of the language being removed.\r\n   */\n  unregisterLanguage(languageName) {\n    return this._loader.ready.pipe(tap(hljs => hljs.unregisterLanguage(languageName)));\n  }\n  /**\r\n   * Adds new language alias or aliases to the library for the specified language name defined under languageName key.\r\n   * @param alias: A string or array with the name of alias being registered\r\n   * @param languageName: the language name as specified by registerLanguage.\r\n   */\n  registerAliases(alias, {\n    languageName\n  }) {\n    return this._loader.ready.pipe(tap(hljs => hljs.registerAliases(alias, {\n      languageName\n    })));\n  }\n  /**\r\n   * @return The languages names list.\r\n   */\n  listLanguages() {\n    return this._loader.ready.pipe(map(hljs => hljs.listLanguages()));\n  }\n  /**\r\n   * Looks up a language by name or alias.\r\n   * @param name Language name\r\n   * @return The language object if found, undefined otherwise.\r\n   */\n  getLanguage(name) {\n    return this._loader.ready.pipe(map(hljs => hljs.getLanguage(name)));\n  }\n  /**\r\n   * Enables safe mode. This is the default mode, providing the most reliable experience for production usage.\r\n   */\n  safeMode() {\n    return this._loader.ready.pipe(map(hljs => hljs.safeMode()));\n  }\n  /**\r\n   * Enables debug/development mode.\r\n   */\n  debugMode() {\n    return this._loader.ready.pipe(map(hljs => hljs.debugMode()));\n  }\n  /**\r\n   * Display line numbers\r\n   * @param el Code element\r\n   */\n  lineNumbersBlock(el) {\n    return this._loader.ready.pipe(filter(hljs => !!hljs.lineNumbersBlock), tap(hljs => hljs.lineNumbersBlock(el)));\n  }\n}\nHighlightJS.ɵfac = function HighlightJS_Factory(t) {\n  return new (t || HighlightJS)(i0.ɵɵinject(HighlightLoader), i0.ɵɵinject(HIGHLIGHT_OPTIONS, 8));\n};\nHighlightJS.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: HighlightJS,\n  factory: HighlightJS.ɵfac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HighlightJS, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: HighlightLoader\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HIGHLIGHT_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\nclass Highlight {\n  constructor(el, _hljs, _sanitizer, platformId, _options) {\n    this._hljs = _hljs;\n    this._sanitizer = _sanitizer;\n    this.platformId = platformId;\n    this._options = _options;\n    // Stream that emits when code string is highlighted\n    this.highlighted = new EventEmitter();\n    this._nativeElement = el.nativeElement;\n  }\n  ngOnChanges(changes) {\n    if (isPlatformBrowser(this.platformId) && changes?.code?.currentValue !== null && changes.code.currentValue !== changes.code.previousValue) {\n      if (this.code) {\n        this.highlightElement(this.code, this.languages);\n      } else {\n        // If string is empty, set the text content to empty\n        this.setTextContent('');\n      }\n    }\n  }\n  /**\r\n   * Highlighting with language detection and fix markup.\r\n   * @param code Accepts a string with the code to highlight\r\n   * @param languages An optional array of language names and aliases restricting detection to only those languages.\r\n   * The subset can also be set with configure, but the local parameter overrides the option if set.\r\n   */\n  highlightElement(code, languages) {\n    // Set code text before highlighting\n    this.setTextContent(code);\n    this._hljs.highlightAuto(code, languages).subscribe(res => {\n      // Set highlighted code\n      this.setInnerHTML(res?.value);\n      // Check if user want to show line numbers\n      if (this.lineNumbers && this._options && this._options.lineNumbersLoader) {\n        this.addLineNumbers();\n      }\n      // Forward highlight response to the highlighted output\n      this.highlighted.emit(res);\n    });\n  }\n  addLineNumbers() {\n    // Clean up line numbers observer\n    this.destroyLineNumbersObserver();\n    animationFrameScheduler.schedule(() => {\n      // Add line numbers\n      this._hljs.lineNumbersBlock(this._nativeElement).subscribe();\n      // If lines count is 1, the line numbers library will not add numbers\n      // Observe changes to add 'hljs-line-numbers' class only when line numbers is added to the code element\n      this._lineNumbersObs = new MutationObserver(() => {\n        if (this._nativeElement.firstElementChild && this._nativeElement.firstElementChild.tagName.toUpperCase() === 'TABLE') {\n          this._nativeElement.classList.add('hljs-line-numbers');\n        }\n        this.destroyLineNumbersObserver();\n      });\n      this._lineNumbersObs.observe(this._nativeElement, {\n        childList: true\n      });\n    });\n  }\n  destroyLineNumbersObserver() {\n    if (this._lineNumbersObs) {\n      this._lineNumbersObs.disconnect();\n      this._lineNumbersObs = null;\n    }\n  }\n  setTextContent(content) {\n    animationFrameScheduler.schedule(() => this._nativeElement.textContent = content);\n  }\n  setInnerHTML(content) {\n    animationFrameScheduler.schedule(() => this._nativeElement.innerHTML = trustedHTMLFromStringBypass(this._sanitizer.sanitize(SecurityContext.HTML, content) || ''));\n  }\n}\nHighlight.ɵfac = function Highlight_Factory(t) {\n  return new (t || Highlight)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(HighlightJS), i0.ɵɵdirectiveInject(i2.DomSanitizer), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(HIGHLIGHT_OPTIONS, 8));\n};\nHighlight.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: Highlight,\n  selectors: [[\"\", \"highlight\", \"\"]],\n  hostVars: 2,\n  hostBindings: function Highlight_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"hljs\", true);\n    }\n  },\n  inputs: {\n    code: [i0.ɵɵInputFlags.None, \"highlight\", \"code\"],\n    languages: \"languages\",\n    lineNumbers: \"lineNumbers\"\n  },\n  outputs: {\n    highlighted: \"highlighted\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Highlight, [{\n    type: Directive,\n    args: [{\n      host: {\n        '[class.hljs]': 'true'\n      },\n      selector: '[highlight]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: HighlightJS\n    }, {\n      type: i2.DomSanitizer\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HIGHLIGHT_OPTIONS]\n      }]\n    }];\n  }, {\n    code: [{\n      type: Input,\n      args: ['highlight']\n    }],\n    languages: [{\n      type: Input\n    }],\n    lineNumbers: [{\n      type: Input\n    }],\n    highlighted: [{\n      type: Output\n    }]\n  });\n})();\nclass HighlightModule {}\nHighlightModule.ɵfac = function HighlightModule_Factory(t) {\n  return new (t || HighlightModule)();\n};\nHighlightModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: HighlightModule\n});\nHighlightModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HighlightModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [Highlight],\n      exports: [Highlight]\n    }]\n  }], null, null);\n})();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { HIGHLIGHT_OPTIONS, Highlight, HighlightJS, HighlightLoader, HighlightModule };","map":{"version":3,"names":["i0","InjectionToken","PLATFORM_ID","Injectable","Inject","Optional","EventEmitter","SecurityContext","Directive","Input","Output","NgModule","isPlatformBrowser","DOCUMENT","BehaviorSubject","EMPTY","throwError","zip","from","animationFrameScheduler","filter","map","take","switchMap","tap","catchError","i2","HIGHLIGHT_OPTIONS","policy","getPolicy","window","trustedTypes","createPolicy","createHTML","s","trustedHTMLFromStringBypass","html","HighlightLoader","constructor","doc","platformId","_options","_ready","ready","asObservable","pipe","hljs","defaultView","next","_loadLibrary","lineNumbersLoader","loadLineNumbers","e","console","error","subscribe","themePath","loadTheme","fullLibraryLoader","coreLibraryLoader","languages","loadFullLibrary","Object","keys","length","loadCoreLibrary","_loadLanguages","entries","langName","langLoader","importModule","langFunc","registerLanguage","setTheme","path","_themeLinkElement","href","createElement","type","rel","media","head","appendChild","ɵfac","HighlightLoader_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","args","undefined","decorators","moduleLoader","module","default","HighlightJS","_loader","options","_hljs","config","configure","listLanguages","highlight","code","language","ignoreIllegals","highlightAuto","value","languageSubset","highlightElement","element","highlightAll","languageName","languageDefinition","unregisterLanguage","registerAliases","alias","getLanguage","name","safeMode","debugMode","lineNumbersBlock","el","HighlightJS_Factory","Highlight","_sanitizer","highlighted","_nativeElement","nativeElement","ngOnChanges","changes","currentValue","previousValue","setTextContent","res","setInnerHTML","lineNumbers","addLineNumbers","emit","destroyLineNumbersObserver","schedule","_lineNumbersObs","MutationObserver","firstElementChild","tagName","toUpperCase","classList","add","observe","childList","disconnect","content","textContent","innerHTML","sanitize","HTML","Highlight_Factory","ɵɵdirectiveInject","ElementRef","DomSanitizer","ɵdir","ɵɵdefineDirective","selectors","hostVars","hostBindings","Highlight_HostBindings","rf","ctx","ɵɵclassProp","inputs","ɵɵInputFlags","None","outputs","features","ɵɵNgOnChangesFeature","host","selector","HighlightModule","HighlightModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","declarations","exports"],"sources":["/Users/egershte/Documents/Personal/fett-frontend/node_modules/ngx-highlightjs/fesm2020/ngx-highlightjs.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, EventEmitter, SecurityContext, Directive, Input, Output, NgModule } from '@angular/core';\nimport { isPlatformBrowser, DOCUMENT } from '@angular/common';\nimport { BehaviorSubject, EMPTY, throwError, zip, from, animationFrameScheduler } from 'rxjs';\nimport { filter, map, take, switchMap, tap, catchError } from 'rxjs/operators';\nimport * as i2 from '@angular/platform-browser';\n\nconst HIGHLIGHT_OPTIONS = new InjectionToken('HIGHLIGHT_OPTIONS');\n\n/**\r\n * Enable usage of the library together with \"trusted-types\" HTTP Content-Security-Policy (CSP)\r\n *\r\n * Can be added to angular.json -> serve -> options -> headers to try it out in DEV mode\r\n * \"Content-Security-Policy\": \"trusted-types ngx-highlightjs; require-trusted-types-for 'script'\"\r\n *\r\n * Read more...\r\n * Angular Security: https://angular.io/guide/security#enforcing-trusted-types\r\n * Trusted Types: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/trusted-types\r\n */\r\nlet policy;\r\nfunction getPolicy() {\r\n    if (!policy) {\r\n        try {\r\n            policy = window?.trustedTypes?.createPolicy('ngx-highlightjs', {\r\n                createHTML: (s) => s,\r\n            });\r\n        }\r\n        catch {\r\n            // trustedTypes.createPolicy throws if called with a name that is\r\n            // already registered, even in report-only mode. Until the API changes,\r\n            // catch the error not to break the applications functionally. In such\r\n            // cases, the code will fall back to using strings.\r\n        }\r\n    }\r\n    return policy;\r\n}\r\nfunction trustedHTMLFromStringBypass(html) {\r\n    return getPolicy()?.createHTML(html) || html;\r\n}\n\n// @dynamic\r\nclass HighlightLoader {\r\n    constructor(doc, platformId, _options) {\r\n        this.doc = doc;\r\n        this.platformId = platformId;\r\n        this._options = _options;\r\n        // Stream that emits when hljs library is loaded and ready to use\r\n        this._ready = new BehaviorSubject(null);\r\n        this.ready = this._ready.asObservable().pipe(filter((hljs) => !!hljs), map((hljs) => hljs), take(1));\r\n        if (isPlatformBrowser(platformId)) {\r\n            // Check if hljs is already available\r\n            if (doc.defaultView.hljs) {\r\n                this._ready.next(doc.defaultView.hljs);\r\n            }\r\n            else {\r\n                // Load hljs library\r\n                this._loadLibrary().pipe(switchMap((hljs) => {\r\n                    if (this._options && this._options.lineNumbersLoader) {\r\n                        // Make hljs available on window object (required for the line numbers library)\r\n                        doc.defaultView.hljs = hljs;\r\n                        // Load line numbers library\r\n                        return this.loadLineNumbers().pipe(tap(() => this._ready.next(hljs)));\r\n                    }\r\n                    else {\r\n                        this._ready.next(hljs);\r\n                        return EMPTY;\r\n                    }\r\n                }), catchError((e) => {\r\n                    console.error('[HLJS] ', e);\r\n                    return EMPTY;\r\n                })).subscribe();\r\n                // Load highlighting theme\r\n                if (this._options?.themePath) {\r\n                    this.loadTheme(this._options.themePath);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Lazy-Load highlight.js library\r\n     */\r\n    _loadLibrary() {\r\n        if (this._options) {\r\n            if (this._options.fullLibraryLoader && this._options.coreLibraryLoader) {\r\n                return throwError(() => 'The full library and the core library were imported, only one of them should be imported!');\r\n            }\r\n            if (this._options.fullLibraryLoader && this._options.languages) {\r\n                return throwError(() => 'The highlighting languages were imported they are not needed!');\r\n            }\r\n            if (this._options.coreLibraryLoader && !this._options.languages) {\r\n                return throwError(() => 'The highlighting languages were not imported!');\r\n            }\r\n            if (!this._options.coreLibraryLoader && this._options.languages) {\r\n                return throwError(() => 'The core library was not imported!');\r\n            }\r\n            if (this._options.fullLibraryLoader) {\r\n                return this.loadFullLibrary();\r\n            }\r\n            if (this._options.coreLibraryLoader && this._options.languages && Object.keys(this._options.languages).length) {\r\n                return this.loadCoreLibrary().pipe(switchMap((hljs) => this._loadLanguages(hljs)));\r\n            }\r\n        }\r\n        return throwError(() => 'Highlight.js library was not imported!');\r\n    }\r\n    /**\r\n     * Lazy-load highlight.js languages\r\n     */\r\n    _loadLanguages(hljs) {\r\n        const languages = Object.entries(this._options.languages).map(([langName, langLoader]) => importModule(langLoader()).pipe(tap((langFunc) => hljs.registerLanguage(langName, langFunc))));\r\n        return zip(...languages).pipe(map(() => hljs));\r\n    }\r\n    /**\r\n     * Import highlight.js core library\r\n     */\r\n    loadCoreLibrary() {\r\n        return importModule(this._options.coreLibraryLoader());\r\n    }\r\n    /**\r\n     * Import highlight.js library with all languages\r\n     */\r\n    loadFullLibrary() {\r\n        return importModule(this._options.fullLibraryLoader());\r\n    }\r\n    /**\r\n     * Import line numbers library\r\n     */\r\n    loadLineNumbers() {\r\n        return importModule(this._options.lineNumbersLoader());\r\n    }\r\n    /**\r\n     * Reload theme styles\r\n     */\r\n    setTheme(path) {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            if (this._themeLinkElement) {\r\n                this._themeLinkElement.href = path;\r\n            }\r\n            else {\r\n                this.loadTheme(path);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Load theme\r\n     */\r\n    loadTheme(path) {\r\n        this._themeLinkElement = this.doc.createElement('link');\r\n        this._themeLinkElement.href = path;\r\n        this._themeLinkElement.type = 'text/css';\r\n        this._themeLinkElement.rel = 'stylesheet';\r\n        this._themeLinkElement.media = 'screen,print';\r\n        this.doc.head.appendChild(this._themeLinkElement);\r\n    }\r\n}\r\nHighlightLoader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: HighlightLoader, deps: [{ token: DOCUMENT }, { token: PLATFORM_ID }, { token: HIGHLIGHT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nHighlightLoader.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: HighlightLoader, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: HighlightLoader, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [DOCUMENT]\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [PLATFORM_ID]\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [HIGHLIGHT_OPTIONS]\r\n                }] }]; } });\r\n/**\r\n * Map loader response to module object\r\n */\r\nconst importModule = (moduleLoader) => {\r\n    return from(moduleLoader).pipe(filter((module) => !!module && !!module.default), map((module) => module.default));\r\n};\n\nclass HighlightJS {\r\n    constructor(_loader, options) {\r\n        this._loader = _loader;\r\n        this._hljs = null;\r\n        // Load highlight.js library on init\r\n        _loader.ready.subscribe((hljs) => {\r\n            this._hljs = hljs;\r\n            if (options && options.config) {\r\n                // Set global config if present\r\n                hljs.configure(options.config);\r\n                if (hljs.listLanguages().length < 1) {\r\n                    console.error('[HighlightJS]: No languages were registered!');\r\n                }\r\n            }\r\n        });\r\n    }\r\n    // A reference for hljs library\r\n    get hljs() {\r\n        return this._hljs;\r\n    }\r\n    /**\r\n     * Core highlighting function. Accepts the code to highlight (string) and a list of options (object)\r\n     * @param code Accepts the code to highlight\r\n     * @param language must be present and specify the language name or alias of the grammar to be used for highlighting\r\n     * @param ignoreIllegals (optional) when set to true it forces highlighting to finish even in case of detecting illegal syntax for the language instead of throwing an exception.\r\n     */\r\n    highlight(code, { language, ignoreIllegals }) {\r\n        return this._loader.ready.pipe(map((hljs) => hljs.highlight(code, { language, ignoreIllegals })));\r\n    }\r\n    /**\r\n     * Highlighting with language detection.\r\n     * @param value Accepts a string with the code to highlight\r\n     * @param languageSubset An optional array of language names and aliases restricting detection to only those languages.\r\n     * The subset can also be set with configure, but the local parameter overrides the option if set.\r\n     */\r\n    highlightAuto(value, languageSubset) {\r\n        return this._loader.ready.pipe(map((hljs) => hljs.highlightAuto(value, languageSubset)));\r\n    }\r\n    /**\r\n     * Applies highlighting to a DOM node containing code.\r\n     * This function is the one to use to apply highlighting dynamically after page load or within initialization code of third-party JavaScript frameworks.\r\n     * The function uses language detection by default but you can specify the language in the class attribute of the DOM node. See the scopes reference for all available language names and scopes.\r\n     * @param element\r\n     */\r\n    highlightElement(element) {\r\n        return this._loader.ready.pipe(map((hljs) => hljs.highlightElement(element)));\r\n    }\r\n    /**\r\n     * Applies highlighting to all elements on a page matching the configured cssSelector. The default cssSelector value is 'pre code',\r\n     * which highlights all code blocks. This can be called before or after the page’s onload event has fired.\r\n     */\r\n    highlightAll() {\r\n        return this._loader.ready.pipe(map((hljs) => hljs.highlightAll()));\r\n    }\r\n    /**\r\n     * @deprecated in version 12\r\n     * Configures global options:\r\n     * @param config HighlightJs configuration argument\r\n     */\r\n    configure(config) {\r\n        return this._loader.ready.pipe(map((hljs) => hljs.configure(config)));\r\n    }\r\n    /**\r\n     * Adds new language to the library under the specified name. Used mostly internally.\r\n     * @param languageName A string with the name of the language being registered\r\n     * @param languageDefinition A function that returns an object which represents the language definition.\r\n     * The function is passed the hljs object to be able to use common regular expressions defined within it.\r\n     */\r\n    registerLanguage(languageName, languageDefinition) {\r\n        return this._loader.ready.pipe(tap((hljs) => hljs.registerLanguage(languageName, languageDefinition)));\r\n    }\r\n    /**\r\n     * Removes a language and its aliases from the library. Used mostly internall\r\n     * @param languageName: a string with the name of the language being removed.\r\n     */\r\n    unregisterLanguage(languageName) {\r\n        return this._loader.ready.pipe(tap((hljs) => hljs.unregisterLanguage(languageName)));\r\n    }\r\n    /**\r\n     * Adds new language alias or aliases to the library for the specified language name defined under languageName key.\r\n     * @param alias: A string or array with the name of alias being registered\r\n     * @param languageName: the language name as specified by registerLanguage.\r\n     */\r\n    registerAliases(alias, { languageName }) {\r\n        return this._loader.ready.pipe(tap((hljs) => hljs.registerAliases(alias, { languageName })));\r\n    }\r\n    /**\r\n     * @return The languages names list.\r\n     */\r\n    listLanguages() {\r\n        return this._loader.ready.pipe(map((hljs) => hljs.listLanguages()));\r\n    }\r\n    /**\r\n     * Looks up a language by name or alias.\r\n     * @param name Language name\r\n     * @return The language object if found, undefined otherwise.\r\n     */\r\n    getLanguage(name) {\r\n        return this._loader.ready.pipe(map((hljs) => hljs.getLanguage(name)));\r\n    }\r\n    /**\r\n     * Enables safe mode. This is the default mode, providing the most reliable experience for production usage.\r\n     */\r\n    safeMode() {\r\n        return this._loader.ready.pipe(map((hljs) => hljs.safeMode()));\r\n    }\r\n    /**\r\n     * Enables debug/development mode.\r\n     */\r\n    debugMode() {\r\n        return this._loader.ready.pipe(map((hljs) => hljs.debugMode()));\r\n    }\r\n    /**\r\n     * Display line numbers\r\n     * @param el Code element\r\n     */\r\n    lineNumbersBlock(el) {\r\n        return this._loader.ready.pipe(filter((hljs) => !!hljs.lineNumbersBlock), tap((hljs) => hljs.lineNumbersBlock(el)));\r\n    }\r\n}\r\nHighlightJS.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: HighlightJS, deps: [{ token: HighlightLoader }, { token: HIGHLIGHT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nHighlightJS.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: HighlightJS, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: HighlightJS, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: HighlightLoader }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [HIGHLIGHT_OPTIONS]\r\n                }] }]; } });\n\nclass Highlight {\r\n    constructor(el, _hljs, _sanitizer, platformId, _options) {\r\n        this._hljs = _hljs;\r\n        this._sanitizer = _sanitizer;\r\n        this.platformId = platformId;\r\n        this._options = _options;\r\n        // Stream that emits when code string is highlighted\r\n        this.highlighted = new EventEmitter();\r\n        this._nativeElement = el.nativeElement;\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (isPlatformBrowser(this.platformId) &&\r\n            changes?.code?.currentValue !== null &&\r\n            changes.code.currentValue !== changes.code.previousValue) {\r\n            if (this.code) {\r\n                this.highlightElement(this.code, this.languages);\r\n            }\r\n            else {\r\n                // If string is empty, set the text content to empty\r\n                this.setTextContent('');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Highlighting with language detection and fix markup.\r\n     * @param code Accepts a string with the code to highlight\r\n     * @param languages An optional array of language names and aliases restricting detection to only those languages.\r\n     * The subset can also be set with configure, but the local parameter overrides the option if set.\r\n     */\r\n    highlightElement(code, languages) {\r\n        // Set code text before highlighting\r\n        this.setTextContent(code);\r\n        this._hljs.highlightAuto(code, languages).subscribe((res) => {\r\n            // Set highlighted code\r\n            this.setInnerHTML(res?.value);\r\n            // Check if user want to show line numbers\r\n            if (this.lineNumbers && this._options && this._options.lineNumbersLoader) {\r\n                this.addLineNumbers();\r\n            }\r\n            // Forward highlight response to the highlighted output\r\n            this.highlighted.emit(res);\r\n        });\r\n    }\r\n    addLineNumbers() {\r\n        // Clean up line numbers observer\r\n        this.destroyLineNumbersObserver();\r\n        animationFrameScheduler.schedule(() => {\r\n            // Add line numbers\r\n            this._hljs.lineNumbersBlock(this._nativeElement).subscribe();\r\n            // If lines count is 1, the line numbers library will not add numbers\r\n            // Observe changes to add 'hljs-line-numbers' class only when line numbers is added to the code element\r\n            this._lineNumbersObs = new MutationObserver(() => {\r\n                if (this._nativeElement.firstElementChild && this._nativeElement.firstElementChild.tagName.toUpperCase() === 'TABLE') {\r\n                    this._nativeElement.classList.add('hljs-line-numbers');\r\n                }\r\n                this.destroyLineNumbersObserver();\r\n            });\r\n            this._lineNumbersObs.observe(this._nativeElement, { childList: true });\r\n        });\r\n    }\r\n    destroyLineNumbersObserver() {\r\n        if (this._lineNumbersObs) {\r\n            this._lineNumbersObs.disconnect();\r\n            this._lineNumbersObs = null;\r\n        }\r\n    }\r\n    setTextContent(content) {\r\n        animationFrameScheduler.schedule(() => this._nativeElement.textContent = content);\r\n    }\r\n    setInnerHTML(content) {\r\n        animationFrameScheduler.schedule(() => this._nativeElement.innerHTML = trustedHTMLFromStringBypass(this._sanitizer.sanitize(SecurityContext.HTML, content) || ''));\r\n    }\r\n}\r\nHighlight.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: Highlight, deps: [{ token: i0.ElementRef }, { token: HighlightJS }, { token: i2.DomSanitizer }, { token: PLATFORM_ID }, { token: HIGHLIGHT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\r\nHighlight.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.2\", type: Highlight, selector: \"[highlight]\", inputs: { code: [\"highlight\", \"code\"], languages: \"languages\", lineNumbers: \"lineNumbers\" }, outputs: { highlighted: \"highlighted\" }, host: { properties: { \"class.hljs\": \"true\" } }, usesOnChanges: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: Highlight, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    host: {\r\n                        '[class.hljs]': 'true'\r\n                    },\r\n                    selector: '[highlight]'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: HighlightJS }, { type: i2.DomSanitizer }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [PLATFORM_ID]\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [HIGHLIGHT_OPTIONS]\r\n                }] }]; }, propDecorators: { code: [{\r\n                type: Input,\r\n                args: ['highlight']\r\n            }], languages: [{\r\n                type: Input\r\n            }], lineNumbers: [{\r\n                type: Input\r\n            }], highlighted: [{\r\n                type: Output\r\n            }] } });\n\nclass HighlightModule {\r\n}\r\nHighlightModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: HighlightModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nHighlightModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.1.2\", ngImport: i0, type: HighlightModule, declarations: [Highlight], exports: [Highlight] });\r\nHighlightModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: HighlightModule });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.2\", ngImport: i0, type: HighlightModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [Highlight],\r\n                    exports: [Highlight]\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { HIGHLIGHT_OPTIONS, Highlight, HighlightJS, HighlightLoader, HighlightModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}